/* reset */
* {
    box-sizing: border-box;
    margin: 0;
}

img,
video {
    display: block;
}

button:not([disabled]),
label[for]:not([for=""]),
label[for]:not([for=""]) *,
input[type="radio"]:not([disabled]),
summary {
    cursor: pointer;
}

body {
    font-size: 1rem;
}

button,
input:not([type]),
input[type="text"],
input[type="number"],
code,
kbd {
    font-size: 1em;
}

/* generics */
/* TODO: replace with mixins */
code,
kbd {
    border-radius: .25em;
    padding: .25ex .25ch .15ex;
}

code {
    background-color: #191919;
    color: #ffc6a4;
}
@media (prefers-color-scheme: dark) {
    code {
        background-color: #e0e0e0;
        color: #943700;
    }
}

/* specifics */
:root {
    --vertical-spacing: 2ex;
    --horizontal-spacing: 2ch;
}

html {
    background-color: #eee; /* always set a background color on html for when users scroll beyong the page content, also in cases when the content doesn't cover all of the page */
    color: #191919; /* i forgot why but i remember concluding that it's a good practice to set a color whenever setting a background-color and vice-versa */
}
@media (prefers-color-scheme: dark) {
    html {
        background-color: #191919;
        color: #e6e6e6;
    }
}

body {
    font-family: sans-serif; /* TODO: find a font stack & also add it to reset */
    line-height: 1.3;
    padding: var(--vertical-spacing) var(--horizontal-spacing);
    max-width: 600px; /* always set *some* kind of limit on width because text is difficult to read if the lines are too long: https://www.joshwcomeau.com/css/full-bleed/; 600px comes from https://medium.com/free-code-camp/the-100-correct-way-to-do-css-breakpoints-88d6a5ba1862 */
}
@media (min-width: 600px) {
    body {
        margin-inline: auto;
        padding-inline: 0;
    }
}

.description {
    margin-block-start: 1em;
}

.main {
    padding-block-start: calc(var(--vertical-spacing) * 2);
}

.details {
    display: inline-block;
    background-color: white;
    border: 1px solid #191919;
    border-radius: .5em;
}
.details[open] {
    padding: 1ex 1ch;
}
@media (prefers-color-scheme: dark) {
    .details {
        border-color: #e6e6e6;
        background-color: black;
    }
}

.summary {
    display: inline flow-root list-item;
    padding: 1ex 1ch;
}
.details[open] .summary {
    position: relative;
    inset-block-start: -1ex;
    inset-inline-start: -1ex;
}

.example-heading {
    display: inline;
}

/* TODO: replace with @mixin in order to avoid combining selectors */
.example-list,
.generate-list,
.resource-list {
    padding: var(--vertical-spacing) 0 0 var(--horizontal-spacing);
}

.example-item:not(:first-of-type),
.generate-item:not(:first-of-type),
.resource-item:not(:first-of-type) {
    margin-block-start: var(--vertical-spacing);
}

.code-block {
    margin-block: var(--vertical-spacing);
    background-color: #191919;
    padding: 1em;
    border-radius: .5em;
}

.code-block-code {
    padding-inline: 0;
    white-space: pre-wrap;
}

.code-block-mark {
    padding: inherit;
    background-color: inherit;
    color: inherit;
    filter: hue-rotate(180deg) contrast(80%);
}
@media (prefers-color-scheme: dark) {
    .code-block-mark {
        filter: hue-rotate(180deg);
    }
}

.video {
    margin-block-start: var(--vertical-spacing);
    max-width: 100%;
    border-radius: .5em;
}

.generate-section {
    padding-block-start: calc(var(--vertical-spacing) * 2);
}

.generate-section-heading-container {
    position: relative;
}

.screen-reader-heading {
    position: absolute;
    inset-block-start: 0;
    inset-inline-start: 0;
    color: transparent;
    background-color: transparent;
    z-index: -1;
}

.noscript-note {
    display: inline-block;
    margin-block-start: 1ex;
    padding-block: .75ex .5ex;
    border-radius: .5em;
    border-width: .5em;
    border-style: double;
}
@supports (border-image-source: url()) {
    @media (prefers-reduced-motion: no-preference) {
        .noscript-note {
            /* TODO: inline image */
            border-image-source: url(./public/images/drawing.svg);
            border-image-slice: 55;
            border-inline: none;
        }
    }
}

.step-container {
    display: flex; /* display: flex; on <li> removes ::marker so a div inside the <li> is needed */
    align-items: flex-end;
    flex-wrap: wrap;
}

.label {
    margin-inline-end: 1ch;
}

#css-property,
#element-lower-bound-value,
#container-lower-bound,
#element-upper-bound-value,
#container-upper-bound {
    padding: 0 .25ch;
    width: 100%;
    color: black;
    background-color: white;
    border-style: solid;
    border-width: 1px;
}
@media (prefers-color-scheme: dark) {
    #css-property,
    #element-lower-bound-value,
    #container-lower-bound,
    #element-upper-bound-value,
    #container-upper-bound {
        color: #e6e6e6;
        background-color: black;
    }
}
#css-property[disabled],
#element-lower-bound-value[disabled],
#container-lower-bound[disabled],
#element-upper-bound-value[disabled],
#container-upper-bound[disabled] {
    border-color: black;
    opacity: .15;
}
@media (prefers-color-scheme: dark) {
    #css-property[disabled],
    #element-lower-bound-value[disabled],
    #container-lower-bound[disabled],
    #element-upper-bound-value[disabled],
    #container-upper-bound[disabled] {
        border-color: revert;
        opacity: .3;
    }
}
#css-property::placeholder,
#element-lower-bound-value::placeholder,
#container-lower-bound::placeholder,
#element-upper-bound-value::placeholder,
#container-upper-bound::placeholder {
    color: inherit;
    opacity: .15;
    font-style: italic;
}
@media (prefers-color-scheme: dark) {
    #css-property::placeholder,
    #element-lower-bound-value::placeholder,
    #container-lower-bound::placeholder,
    #element-upper-bound-value::placeholder,
    #container-upper-bound::placeholder {
        opacity: .3
    }
}
#css-property[disabled]::placeholder,
#element-lower-bound-value[disabled]::placeholder,
#container-lower-bound[disabled]::placeholder,
#element-upper-bound-value[disabled]::placeholder,
#container-upper-bound[disabled]::placeholder {
    opacity: 1;
}

#css-property {
    max-width: calc(27ch - 2 * 2px);
}

#element-lower-bound-value,
#container-lower-bound,
#element-upper-bound-value,
#container-upper-bound {
    max-width: calc(8ch - 2 * 2px);
    appearance: textfield;
}
@media (min-width: 600px) {
    #element-lower-bound-value,
    #container-lower-bound,
    #element-upper-bound-value,
    #container-upper-bound {
        appearance: auto;
    }
}

.flex-wrap-joiner {
    display: flex;
    align-items: flex-end;
}

.unit-set {
    margin-inline-start: 1.75ch;
    padding: 0;
    display: flex;
    border: none;
}

.unit-container {
    margin-inline-end: 1.75ch;
}

.unit {
    margin-inline-start: .25ch;
    padding-inline: .25ch;
}

.button {
    display: block;
    margin-block-start: var(--vertical-spacing);
    border: 1px solid;
    padding: 1ex 1ch;
    background-color: white;
    color: inherit; /* fix for safari button:active */
    border-radius: .5em;
}
.button:not([disabled]):active {
    box-shadow: inset 0 0 5px 0px #191919;
}
@media (prefers-color-scheme: dark) {
    .button {
        color: #e6e6e6;
        background-color: black;
    }
    .button:not([disabled]):active {
        box-shadow: inset 0 0 5px 0px #e6e6e6;
    }
}

.button[disabled] {
    opacity: .3;
}

.output {
    display: inline-block;
    margin: calc(1em + .5em + 1em) 0 1em;
    position: relative;
}

.notification {
    position: absolute;
    border-block-end: 2px solid transparent;
    padding: 0 .5ch;
    inset-block-start: calc(0px - .5em);
    inset-inline-start: 50%;
    transform: translate3d(-50%, -100%, 0);
}
.notification:not(:empty) {
    border-block-end-color: currentColor;
}

.notification:not(:empty)::after {
    content: "";
    display: block;
    position: absolute;
    inset-block-end: 0;
    inset-inline-start: 50%;
    transform: translate3d(-50%, 100%, 0);
    background-color: currentColor;
    width: 1em;
    height: 1em;
    clip-path: polygon(0 0, 100% 0, 50% 50%);
}

.kbd {
    background-color: #474747;
    color: #d7d700;
}

.result {
    display: block;
    font-size: 1.5rem;
    padding: .5ex 0;
}
.result:not(:empty) {
    padding-inline: .5ch;
}

.note {
    border-block-start-style: dotted;
    padding-block-start: 1em;
}

.footer {
    margin-block-start: calc(var(--vertical-spacing) * 2);
}

.link {
    color: inherit;
    text-underline-offset: .25ex;
}
.link:hover,
.link:focus {
    color: black;
}
@media (prefers-color-scheme: dark) {
    .link:hover,
    .link:focus {
        color: white;
    }
}

/* overrides */
.visually-hidden:not(:focus):not(:active) {
    width: 1px !important;
    height: 1px !important; /* https://snook.ca/archives/html_and_css/hiding-content-for-accessibility */
    padding: 0 !important;
    border: 0 !important;
    overflow: hidden !important;
    position: absolute !important;
    white-space: nowrap !important; /* https://medium.com/@jessebeach/beware-smushed-off-screen-accessible-text-5952a4c2cbfe */
    clip: rect(1px 1px 1px 1px) !important; /* IE6, IE7 */
    clip: rect(1px, 1px, 1px, 1px) !important;
    clip-path: inset(50%) !important;
}

[disabled],
[disabled] * {
    cursor: not-allowed !important;
}
