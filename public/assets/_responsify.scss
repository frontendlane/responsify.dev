///
/// Responsify generates a CSS `calc()` value that gradually changes an element's `width`, `margin`, `padding`, etc. between two viewport sizes. More at github.com/frontendlane/responsify
/// @author github.com/frontendlane
/// @param {Number} $containerLowerBound - Size of the relative element (i.e. parent, grandparent, ancestor, or viewport) at lower bound, in pixels.
/// @param {Number} $containerUpperBound - Size of the relative element (i.e. parent, grandparent, ancestor, or viewport) at upper bound, in pixels.
/// @param {Number} $elementLowerBound - Size of the target element at lower bound, in $unit.
/// @param {Number} $elementUpperBound - Size of the target element at upper bound, in $unit.
/// @param {"px" | "vw" | "%"} $unit ["px"] - unit for $elementLowerBound / $elementUpperBound.
/// @return {*}
///
/// @example scss - Responsify <div>'s padding from 40px at 320px viewport width to 90px at 1024px viewport width. Note that calc() will be applied at all viewport widths, not only between 320px and 1024px.
///     div {
///        padding: responsify(320, 1024, 40, 90, "px");
///     }
/// @example css - CSS output
///     div {
///        padding: calc(-2232.72727px + 7.10227vw);
///     }
///
/// @example scss - Responsify <img>'s height from 60% at 320px viewport width to 30% at 1024px viewport width. Same as in the previous example, the calc() will be applied at all viewport widths.
///     img {
///        height: responsify(320, 1024, 60, 30, "%");
///     }
/// @example css - CSS output
///     img {
///        height: calc(-5044.36364px + 16.36364%);
///     }
///
/// @example scss - Responsify <section>'s margin-top from 50px at 320px viewport width to 100px at 1000px viewport width. Due to s @media query in this example, the calc() will be applied up to and including 1000px viewport width. Note the omitted optional "px" argument at the end.
///     @media (max-width: 1000px) {
///         section {
///            margin-top: responsify(320, 1000, 50, 100);
///         }
///     }
/// @example css - CSS output
///     @media (max-width: 1000px) {
///         section {
///            margin-top: calc(-2302.94118px + 7.35294vw);
///         }
///     }
///
/// @example scss - Responsify <video>'s width from 100vw at 320px viewport width to to 60vw at 1024px viewport width. In this example width is lower bound at 300px and upper bound at 1800px via clamp() function.
///     video {
///        width: clamp(300px, responsify(320, 1024, 100, 60, "vw"), 1800px);
///     }
/// @example css - CSS output
///     video {
///        width: clamp(300px, calc(-13061.81818px + 41.81818vw), 1800px);
///     }
///
@function responsify($containerLowerBound, $containerUpperBound, $elementLowerBound, $elementUpperBound, $unit: "px") {
    @if $containerLowerBound < 0 {
        @error "Size of the relative element (i.e. parent, grandparent, ancestor, or viewport) at lower bound cannot be negative.";
    }

    @if $containerUpperBound < 0 {
        @error "Size of the relative element (i.e. parent, grandparent, ancestor, or viewport) at upper bound cannot be negative.";
    }

    @if $unit != "px" and $unit != "vw" and $unit != "%"  {
        @error "$unit must be \"px\", \"vw\", or \"%\".";
    }

    $elementStartingSize: 0;
    @if $unit == "px" {
        $elementStartingSize: $elementLowerBound;
    }
    @else {
        $elementStartingSize: $elementLowerBound / 100 * $containerLowerBound;
    }

    $elementEndingSize: 0;
    @if $unit == "px" {
        $elementEndingSize: $elementUpperBound;
    }
    @else {
        $elementEndingSize: $elementUpperBound / 100 * $containerUpperBound;
    }

    $elementDiff: $elementEndingSize - $elementStartingSize;
    $containerDiff: $containerUpperBound - $containerLowerBound;
    $rate: $elementDiff / $containerDiff * 100;
    $initial: $elementStartingSize - ($containerLowerBound * $rate);

    $sign: 0;
    @if $rate < 0 {
        $sign: "-";
    }
    @else {
        $sign: "+";
    }

    $calcUnit: 0;
    @if $unit == "%" {
        $calcUnit: "%";
    }
    @else {
        $calcUnit: "vw";
    }

    @if $rate < 0 {
        $rate: $rate * -1;
    }

    @return calc(#{$initial}px #{$sign} #{$rate}#{$calcUnit});
}
